// -*- mode: java -*-
// This is code generated by gen_code.py from the EXML schema

package exml.tueba;
import elkfed.ml.util.Alphabet;
import exml.objects.*;

public class TuebaNodeSchema extends ObjectSchema<TuebaNodeMarkable>
    {
        public static class TuebaNodeFactory
          implements GenericObjectFactory<TuebaNodeMarkable>
        {
            public TuebaNodeMarkable createObject(ObjectSchema<TuebaNodeMarkable> schema)
            {
                return new TuebaNodeMarkable();
            }
        }
        public static TuebaNodeFactory factory=new TuebaNodeFactory();
        public static final Alphabet<String> global_alph=new Alphabet<String>();
        public static final Attribute<TuebaNodeMarkable, String> ATTR_cat = new Attribute<TuebaNodeMarkable, String> ("cat",
                new IAccessor<TuebaNodeMarkable, String>() {
                    public String get(TuebaNodeMarkable o) {
                       return o.getCat(); }
                    public void put(TuebaNodeMarkable o, String v) {
                       o.setCat(v); }},
                new EnumConverter());
        public static final Attribute<TuebaNodeMarkable, String> ATTR_edge_label = new Attribute<TuebaNodeMarkable, String> ("func",
                new IAccessor<TuebaNodeMarkable, String>() {
                    public String get(TuebaNodeMarkable o) {
                       return o.getEdge_label(); }
                    public void put(TuebaNodeMarkable o, String v) {
                       o.setEdge_label(v); }},
                new EnumConverter());
        public static final Attribute<TuebaNodeMarkable, TuebaNodeMarkable> ATTR_parent = new Attribute<TuebaNodeMarkable, TuebaNodeMarkable> ("parent",
                new IAccessor<TuebaNodeMarkable, TuebaNodeMarkable>() {
                    public TuebaNodeMarkable get(TuebaNodeMarkable o) {
                       return o.getParent(); }
                    public void put(TuebaNodeMarkable o, TuebaNodeMarkable v) {
                       o.setParent(v); }},
                new ReferenceConverter<>());
        public static final Attribute<TuebaNodeMarkable, String> ATTR_comment = new Attribute<TuebaNodeMarkable, String> ("comment",
                new IAccessor<TuebaNodeMarkable, String>() {
                    public String get(TuebaNodeMarkable o) {
                       return o.getComment(); }
                    public void put(TuebaNodeMarkable o, String v) {
                       o.setComment(v); }},
                new StringConverter());
        public static final int IDX_children=global_alph.lookupIndex("children");
        public static final int IDX_secEdge=global_alph.lookupIndex("secEdge");
        public static final int IDX_relation=global_alph.lookupIndex("relation");
        public static final int IDX_splitRelation=global_alph.lookupIndex("splitRelation");
        public static final TuebaNodeSchema instance=new TuebaNodeSchema();


        public TuebaNodeSchema() {
            super("node", TuebaNodeMarkable.class,
                  factory, global_alph);
            addAttribute(ATTR_cat);
            addAttribute(ATTR_edge_label);
            addAttribute(ATTR_parent);
            addAttribute(ATTR_comment);
            addRelation("secEdge", TuebaSecEdgeSchema.instance);
            addRelation("relation", TuebaRelationSchema.instance);
            addRelation("splitRelation", TuebaSplitRelationSchema.instance);
        }
}