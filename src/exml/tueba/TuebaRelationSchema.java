// -*- mode: java -*-
// This is code generated by gen_code.py from the EXML schema

package exml.tueba;
import elkfed.ml.util.Alphabet;
import exml.objects.*;

public class TuebaRelationSchema extends ObjectSchema<TuebaRelationEdge>
    {
        public static class TuebaRelationFactory
          implements GenericObjectFactory<TuebaRelationEdge>
        {
            public TuebaRelationEdge createObject(ObjectSchema<TuebaRelationEdge> schema)
            {
                return new TuebaRelationEdge();
            }
        }
        public static TuebaRelationFactory factory=new TuebaRelationFactory();
        public static final Alphabet<String> global_alph=new Alphabet<String>();
        public static final Attribute<TuebaRelationEdge, String> ATTR_type = new Attribute<TuebaRelationEdge, String> ("type",
                new IAccessor<TuebaRelationEdge, String>() {
                    public String get(TuebaRelationEdge o) {
                       return o.getType(); }
                    public void put(TuebaRelationEdge o, String v) {
                       o.setType(v); }},
                new EnumConverter());
        public static final Attribute<TuebaRelationEdge, TuebaNodeInterface> ATTR_target = new Attribute<TuebaRelationEdge, TuebaNodeInterface> ("target",
                new IAccessor<TuebaRelationEdge, TuebaNodeInterface>() {
                    public TuebaNodeInterface get(TuebaRelationEdge o) {
                       return o.getTarget(); }
                    public void put(TuebaRelationEdge o, TuebaNodeInterface v) {
                       o.setTarget(v); }},
                new ReferenceConverter());
        public static final TuebaRelationSchema instance=new TuebaRelationSchema();


        public TuebaRelationSchema() {
            super("relation", TuebaRelationEdge.class,
                  factory, global_alph);
            addAttribute(ATTR_type);
            addAttribute(ATTR_target);
        }
}